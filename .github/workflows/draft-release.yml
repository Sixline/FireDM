#  FireDM
#
#  multi-connections internet download manager, based on "pyCuRL/curl", and "youtube_dl""
#
#  :copyright: (c) 2019-2021 by Mahmoud Elshahat.
#  :license: GNU LGPLv3, see LICENSE for more details.
#
#  Module description:
#      github action to create a draft release, build binaries for windows and linux
#      this action will be triggered everytime a version.py file changed


# name: draft-release

# Controls when the action will run.
# on:
  # Triggers the workflow on "version.py" file changed
 # push:
  #  paths:
   #   - 'firedm/version.py'

  # Allows you to run this workflow manually from the Actions tab
 # workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
  # This workflow contains a single job called "build"
 # build:
    # The type of runner that the job will run on
  #  runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
   # steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     # - uses: actions/checkout@v2
      
     # - name: upgrade pip
      #  run: python3 -m pip install --upgrade pip

     # - name: create windows binary
      #  run: |
       #   # windows zip file
        #  cd ./scripts/exe_build
         # python3 ./exe-quickbuild.py

      #- name: create linux binary "AppImage"
      #  run: |
      #    # linux appimage file
      #    cd ./scripts/appimage
      #    python3 ./appimage-quickbuild.py

   #   - name: get version name
    #    run: |
     #     echo "version=$(cat ./firedm/version.py | grep -Po '\d+\.\d+\.\d+')" >> $GITHUB_ENV

     # - name: create release body
     #   run: |
     #     echo '# Release info:
     #     **Windows: [.zip file]**
     #     - Portable version for windows 32bit and 64bit, no installation needed, just extract to any folder and double click FireDM-GUI.exe file.
     #     - if you need to run firedm in command line mode you can run FireDM.exe from command line terminal, to show available options type command `firedm --help` .
     #     - ffmpeg.exe included, you can download latest version [here](https://github.com/yt-dlp/FFmpeg-Builds/releases)
     #     - The binary version ".exe" prepared by "cx_freeze" on python 3.8, windows8x32bit
     #     ---

        #  **Linux: [.AppImage file]**
        #  - AppImage file, portable, no installation needed, download and make file executable by right clicking the file>Properties>Permissions>Allow executing file as a program, or from terminal by `chmod +x FireDM_xxx.AppImage`
        #  - ffmpeg is not included in this image and must be available on your system, to install ffmpeg you can `sudo apt install ffmpeg` on debian based or ` sudo pacman -S ffmpeg` on Arch based
        #  - The binary version ".AppImage" is prepared by "appimage-builder" on linuxmint, and tested on ubuntu 20.04 and Manjaro kde
        #  ---

      #    **changelog:**
      #    '  > ./release-body.txt

     #     sed 's/\r$//' ./ChangeLog.txt | sed -e '/^$/,$d' >> ./release-body.txt


    #  - name: Create Release
     #   id: create_release
      #  uses: actions/create-release@v1
      #  env:
       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
       # with:
        #  tag_name: ${{ env.version }}
         # release_name: FireDM version ${{ env.version }}
          # body_path: ./release-body.txt
          # draft: true
          # prerelease: false

      # upload file to github release page 00
     # - name: Upload the artifacts
      #  uses: skx/github-action-publish-binaries@master
       # env:
       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       # with:
        #  releaseId: ${{ steps.create_release.outputs.id }}
         # args: './scripts/appimage/FireDM*.AppImage ./scripts/exe_build/FireDM*.zip'
